name: Deploy na EC2 e Docker

on:
  push:
    branches:
      - main  # Executa quando há push na branch main

jobs:
  deploy:
    runs-on: ubuntu-latest  # Define o ambiente para executar as ações

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4  # Baixa o código do repositório

      - name: Configurar Acesso SSH na EC2
        run: |
          # Cria o diretório .ssh, coloca a chave privada e ajusta as permissões
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa  # Definindo as permissões da chave
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Conectar na EC2, Subir Código e Rodar Docker
        run: |
          # Conectar via SSH e executar as ações na EC2
          ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            # Atualizar pacotes e instalar o Docker se necessário
            sudo yum update -y
            sudo yum install -y docker git
            sudo service docker start
            sudo usermod -aG docker ec2-user  # Adiciona o usuário ao grupo docker

            # Clonar ou atualizar o código
            cd ~/ || git clone https://github.com/seu-usuario/lanchonete-nosso-canto.git && cd lanchonete-nosso-canto
            git pull origin main  # Atualiza o código com o mais recente da branch main

            # Construir a imagem Docker
            docker build -t lanchonete .

            # Rodar o container Docker
            docker run -d -p 5002:5002 --name lanchonete-app lanchonete
          EOF

      - name: Exibir Endereço de Acesso
        run: |
          # Exibe o link para acessar a aplicação
          echo "Acesse a aplicação em: http://${{ secrets.EC2_HOST }}:5002"
